name: Release and Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run tests (if available)
        run: pnpm test --if-present
        
      - name: Run linting (if available)
        run: pnpm run lint --if-present

  auto-release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Check for version changes
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          LAST_VERSION=${LAST_TAG#v}
          
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "last-version=$LAST_VERSION" >> $GITHUB_OUTPUT
          
          if [ "$CURRENT_VERSION" != "$LAST_VERSION" ]; then
            echo "version-changed=true" >> $GITHUB_OUTPUT
          else
            echo "version-changed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Create release tag
        if: steps.version-check.outputs.version-changed == 'true'
        run: |
          VERSION=${{ steps.version-check.outputs.current-version }}
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
          
      - name: Publish to NPM
        if: steps.version-check.outputs.version-changed == 'true'
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        if: steps.version-check.outputs.version-changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current-version }}
          release_name: Release v${{ steps.version-check.outputs.current-version }}
          draft: false
          prerelease: false